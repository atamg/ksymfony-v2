name: CI (Lint, Test, Scan)

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

concurrency:
  group: pr-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  php-ci:
    name: PHP Lint, Tests, Static Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          coverage: pcov
          extensions: intl

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-

      - name: Install deps
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: PHPUnit (with coverage gate example)
        env:
          COVERAGE_MIN: ${{ vars.COVERAGE_MIN || '60' }}
        run: |
          vendor/bin/phpunit --testdox --coverage-clover coverage.xml
          php -r '
            $x = @simplexml_load_file("coverage.xml");
            if (!$x || !isset($x->project->metrics)) { fwrite(STDERR, "Cannot parse coverage.xml\n"); exit(1); }
            $m = $x->project->metrics;
            if (isset($m["line-rate"])) {
              $pct = (float)$m["line-rate"] * 100.0;
            } else {
              $covered = (int)($m["coveredstatements"] ?? 0);
              $total   = (int)($m["statements"] ?? 0);
              $pct = $total > 0 ? ($covered / $total) * 100.0 : 0.0;
            }
            $min = getenv("COVERAGE_MIN") !== false ? (float)getenv("COVERAGE_MIN") : 60.0;
            if ($pct + 1e-9 < $min) { fprintf(STDERR, "Coverage %.2f%% < %.2f%%\n", $pct, $min); exit(1); }
            printf("Coverage OK: %.2f%% >= %.2f%%\n", $pct, $min);
          '

      - name: Composer audit (dependencies)
        run: composer audit --locked --no-interaction

      - name: PHPStan (static analysis)
        run: vendor/bin/phpstan analyse --memory-limit=1G --error-format=github

      - name: PHP-CS-Fixer (check only)
        run: vendor/bin/php-cs-fixer fix --dry-run --diff

  sec-scans:
    name: Trivy FS/Config + Secrets
    runs-on: ubuntu-latest
    needs: php-ci
    steps:
      - uses: actions/checkout@v4

      - name: Trivy FS scan
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: fs
          ignore-unfixed: true
          severity: HIGH,CRITICAL
          format: sarif
          output: trivy-fs.sarif

      - name: Trivy config scan (Dockerfile/compose/IaC)
        uses: aquasecurity/trivy-action@0.33.1
        continue-on-error: true
        with:
          scan-type: config
          ignore-unfixed: true
          severity: HIGH,CRITICAL
          format: sarif
          output: trivy-config.sarif

      - name: Upload SARIF (fs)
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-fs.sarif
          category: trivy-fs

      - name: Upload SARIF (config)
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-config.sarif
          category: trivy-config

      - name: Clean caches (avoid Gitleaks false positives)
        run: rm -rf .cache trivy-cache || true

      - name: Secret scan (gitleaks)
        id: gitleaks
        uses: DariuszPorowski/github-action-gitleaks@v2
        with:
          source: .
          no_git: true
          report_format: sarif
          redact: true
          verbose: true
        
      - name: Upload SARIF (gitleaks)
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.gitleaks.outputs.report }}
          category: gitleaks
